name: Comprehensive CI Pipeline

on:
  push:
    branches:
      - 'feature/*'
      - 'bugfix/*'
      - 'develop'

env:
  PYTHON_VERSION: '3.12'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 pylint black

      - name: Run unit tests
        run: |
          pytest tests/ -v

      - name: Run Flake8 lint checks
        continue-on-error: true
        run: |
          mkdir -p logs
          flake8 src/ tests/ | tee logs/flake8.log

      - name: Run Pylint checks
        continue-on-error: true
        run: |
          pylint src/ tests/ | tee logs/pylint.log

      - name: Upload lint logs
        uses: actions/upload-artifact@v4
        with:
          name: lint-logs
          path: logs/

  code-formatting:
    needs: validate
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Black
        run: pip install black

      - name: Run Black formatter
        run: |
          black src/ tests/

      - name: Commit formatted code
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Auto-format code with Black" || exit 0

      - name: Pull latest changes
        run: |
          git pull origin main --rebase

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  create-pull-request:
    needs: [validate, code-formatting]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Automated code formatting and CI checks"
          branch: develop
          base: main
          title: "Code Review: Automated CI Pipeline Check"
          body: |
            Automated pull request created by CI pipeline
            - ‚úÖ Unit tests passed
            - üîç Linting checks completed
            - üñåÔ∏è Code formatted with Black
